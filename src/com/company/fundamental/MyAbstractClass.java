package com.company.fundamental;

/** extends
 * Абстрактный класс наследуется (etxends)
 * Суть абстрактного класса заключается в том, что он не завершён, и его нужно завершить в классах-наследниках.
 *Мы можем наследовать только один класс
 *
 * Абстрактные классы используются, когда есть отношение "is-a", то есть класс-наследник расширяет базовый
 * абстрактный класс, а интерфейсы могут быть реализованы разными классами, вовсе не связанными друг с другом.
 *
 *Используйте абстрактные классы, если:
 * Вы хотите поделиться кодом между несколькими тесно связанными классами.
 *
 * Вы ожидаете, что классы, которые расширяют ваш абстрактный класс, имеют много общих методов или полей, или
 * требуют других модификаторов доступа, кроме public (например, protected и private).
 *
 * Вы хотите объявить нестатические или не-final поля. Это позволяет вам определять методы, которые могут
 * получить доступ и изменить состояние объекта, которому они принадлежат.
 *
 * Абстрактный метод – это метод без тела.
 *
 * */

public  abstract class MyAbstractClass {

    int x2;
    int y2;
    int z2;



//Абстрактные методы без тела метода(без реализации)
    // Только в абстрактных классах можно создавать абстрактные методы

    public  abstract void method1InAbstractClass1 ();
    public  abstract void  method1InAbstractClass2();

    public int method1InAbstractClass4(int x3,int y3){

        z2= x2 + y2;
        return z2;
    }

    public  int  method1InAbstractClass3 (int a, int b){
        return a+b;
    }
}
